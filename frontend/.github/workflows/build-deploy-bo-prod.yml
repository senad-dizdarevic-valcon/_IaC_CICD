name: PROD - Build and Deploy BackOffice

env:
  aws_env: 'prod'
  aws_cf_id: 'E1J8I7V6T9A9LB'

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:
  
jobs:
  Build_and_Deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Build app
      run: | 
        npm ci
        npm run build:${{ env.aws_env }} --if-present
        npm test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: eu-west-1

    - name: Deploy build to S3
      run: |
        aws s3 sync ./dist/doct-back-office/ s3://doct-bo-app-${{ env.aws_env }}/

    - name: Invalidate cache
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ env.aws_cf_id }} --paths '/*'

    - name: Backup build to S3
      run: | 
        d=$(date +%Y-%m-%d.%H-%M-%S)
        echo "$d"
        zip -r Doct.bo.$d.zip ./dist/doct-back-office/
        aws s3 cp ./Doct.bo.$d.zip s3://doct-releases-${{ env.aws_env }}/bo/

  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - Build_and_Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          # Optional Input
          channel: '#doct-vetzy-notifications'
          name: 'Doct - BackOffice'